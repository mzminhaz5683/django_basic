wwwConfig = {
	'IS_DEBUG' : <True | False>,
	'ALLOWED_HOSTS' : '<ALLOWED_HOSTS>', # eg: ['*']
	'SERVER_TYPE' : '<SERVER_TYPE>', # local or stage
	'LOG_LOCATION': '<LOG_LOCATION>', # eg: '../logs/'
	#absolute path to staicroot folder on the machine - should be outside the
	#git repo
	'STATIC_ROOT' : '<STATIC_ROOT>',
	'STATIC_URL' : '<STATIC_URL_PATH>',
	'MEDIA_URL' : '<MEDIA_URL>', # a part of url, using which anyone can retrive the file. eg: '/media/'
	'MEDIA_ROOT' : '<MEDIA_ROOT>', # media folder location from manage.py file location. eg: '../media/'
	# SECURITY WARNING: keep the secret key used in production secret!
	'SECRET_KEY' : '<SECRET_KEY>',
	'BASE_URL': '<BASE_URL>'
}

emailConfig = {
	'EMAIL_USE_TLS' : True,
	'EMAIL_HOST' : '<EMAIL_HOST>',
	'EMAIL_HOST_USER' : '<EMAIL_USER>',
	'EMAIL_HOST_PASSWORD' : '<EMAIL_PASSWORD>',
	'EMAIL_PORT' : 587
}

postgresDB = {
	'ENGINE': 'django.db.backends.postgresql',
	'NAME' : '<POSTGRES_DB_NAME>',
	'NAME' : '<POSTGRES_DB_NAME>',
	'PASSWORD' : '<POSTGRES_DB_PASSWORD>',
	'HOST' : '<POSTGRES_DB_HOST>',
	'PORT' : '5432'
}

def getSqliteDB(baseDir):
	return {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': baseDir / 'db.sqlite3'
	}

def getDbConfig(baseDir):
	if wwwConfig['SERVER_TYPE'] == 'local':
		return getSqliteDB(baseDir)
	return postgresDB
